{
  "React Template: Component": {
    "prefix": "react-component",
    "body": [
      "import React, { useState, useEffect } from 'react'\n",
      "const Component = (props) => {",
      "\n  return <p>Component</p>",
      "}"
    ],
  },
  "React Template: debug": {
    "prefix": "debug-component-mount",
    "body": [
      "useEffect(() => {",
      "  console.log('mount')",
      "  return () => console.log('cleanup')",
      "}, [])"
    ],
  },
  "React Template: useState": {
    "prefix": "useState",
    "body": [
      "const [$1, set${1/^(\\w+)/${1:/capitalize}/}] = useState($2)",
    ],
  },
  "React Template: useEffect": {
    "prefix": "useEffect",
    "body": [
      "useEffect(() => {",
      "  $2",
      "}, [$1])",
      "$0"
    ],
  },
  "React Template: useContext": {
    "prefix": "useContext",
    "body": [
      "useContext($1)",
      "$0"
    ],
  },
  "React Template: useReducer": {
    "prefix": "useReducer",
    "body": [
      "const [state, dispatch] = useReducer($1, $2)",
      "$0"
    ],
  },
  "React Template: useMemo": {
    "prefix": "useMemo",
    "body": [
      "useMemo(() => {",
      "  $2",
      "}, [$1])",
      "$0"
    ],
  },
  "React Template: memo": {
    "prefix": "memo",
    "body": [
      "memo($1, (prev, next) => { $2 })",
      "$0"
    ],
  },
  "React Template: callback": {
    "prefix": "callback",
    "body": [
      "callback(() => {",
      "  $2",
      "}, [$1])",
      "$0"
    ],
  },
  "React Template: useImperativeHandle": {
    "prefix": "useImperativeHandle",
    "body": [
      "useImperativeHandle($1, () => ({",
        "  $2",
      "}))",
      "$0"
    ],
  },
  "React Template: useLayoutEffect": {
    "prefix": "useLayoutEffect",
    "body": [
      "useLayoutEffect(() => {",
      "  $2",
      "}, [$1])",
      "$0"
    ],
  },
}